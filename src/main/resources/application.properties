spring.datasource.url=${DATABASE_URL}&prepareThreshold=0
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}

telegram.bot.username=${TELEGRAM_USER}
telegram.bot.token=${TELEGRAM_TOKEN}
telegram.admin.chatId=${TELEGRAM_ADMIN_ID}

google.client.id=${GOOGLE_CLIENT_ID}
google.client.secret=${GOOGLE_CLIENT_SECRET}
google.refresh.token=${GOOGLE_REFRESH_TOKEN}

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.postgresql=DEBUG

spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=20000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.data-source-properties.cachePrepStmts=false
spring.datasource.hikari.data-source-properties.useServerPrepStmts=false
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=0
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=0
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.query.plan_cache_max_size=64
spring.jpa.properties.hibernate.query.plan_cache_parameter_metadata_max_size=32
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.jdbc.use_streams_for_binary=true

spring.datasource.hikari.data-source-properties.prepareThreshold=0


# Дублюємо для Hibernate, щоб він гарантовано бачив ці ж властивості
spring.jpa.properties.jakarta.persistence.jdbc.url=${spring.datasource.url}
spring.jpa.properties.jakarta.persistence.jdbc.user=postgres.yqiyvibazcyxovdszhfx
spring.jpa.properties.jakarta.persistence.jdbc.password=!Vpngroza2000
spring.jpa.properties.jakarta.persistence.jdbc.driver=org.postgresql.Driver
