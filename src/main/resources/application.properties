spring.datasource.url=${DATABASE_URL}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}

telegram.bot.username=${TELEGRAM_USER}
telegram.bot.token=${TELEGRAM_TOKEN}
telegram.admin.chatId=${TELEGRAM_ADMIN_ID}

google.client.id=${GOOGLE_CLIENT_ID}
google.client.secret=${GOOGLE_CLIENT_SECRET}
google.refresh.token=${GOOGLE_REFRESH_TOKEN}

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=20000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.allow-pool-suspension=true
spring.datasource.hikari.leak-detection-threshold=20000
spring.datasource.hikari.connection-test-query=SELECT 1

# Вимикаємо Prepared Statement cache — це безпечно для Render
spring.datasource.hikari.data-source-properties.cachePrepStmts=false
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=0
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=0

# ===============================
# ⚙️ HIBERNATE SETTINGS
# ===============================
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false
spring.jpa.show-sql=true

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# Кешування запитів (оптимізовано)
spring.jpa.properties.hibernate.query.plan_cache_max_size=64
spring.jpa.properties.hibernate.query.plan_cache_parameter_metadata_max_size=32
spring.jpa.properties.hibernate.jdbc.batch_size=20